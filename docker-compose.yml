version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sonicwall-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - VITE_API_URL=/app/sonicwall/api
    networks:
      - app-network
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.10'
          memory: 64M

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sonicwall-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://user:${DB_PASSWORD}@sonicwall-db:5432/sonicwall
      - SECRET_KEY=${SECRET_KEY}
      - CORS_ORIGINS=http://localhost:80
    networks:
      - app-network
    depends_on:
      - sonicwall-db
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.10'
          memory: 64M

  sonicwall-db:
    image: postgres:15-alpine
    container_name: sonicwall-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: sonicwall
    volumes:
      - sonicwall_postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.10'
          memory: 64M

networks:
  app-network:
    external: true
    name: docker-apps_app-network

volumes:
  sonicwall_postgres_data: 